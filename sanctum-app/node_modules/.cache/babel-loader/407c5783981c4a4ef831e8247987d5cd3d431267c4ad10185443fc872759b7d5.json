{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      confirm: '',\n      errors: {}\n    };\n  },\n  methods: {\n    async registerUser() {\n      try {\n        // Call the register API endpoint using Axios\n        // the /register is an API route that define in the backend using Laravel\n        const response = await axios.post(this.$root.$data.apiUrl + '/register', {\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          password_confirmation: this.confirm\n        });\n        if (response.status === 201) {\n          // After successful registration, handle redirection or other actions\n          // Clear the form fields after successful registration\n          this.name = '';\n          this.email = '';\n          this.password = '';\n          this.confirm = '';\n          alert('Registration successful');\n          // Redirect to the login page\n          this.$router.push('/');\n        }\n      } catch (error) {\n        // Handle registration error, show error message to the user\n        this.errors = error.response.data.errors;\n      }\n    },\n    //the field param is the name of the input field that triggered the error\n    clearErrors(field) {\n      // Clear error message for the specified field\n      // this method is called when the user types in the input field triggering the event handler \n      this.errors[field] = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","email","password","confirm","errors","methods","registerUser","response","post","$root","$data","apiUrl","password_confirmation","status","alert","$router","push","error","clearErrors","field"],"sources":["C:\\clone\\finalquiz1\\sanctum-app\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5 w-25\">\r\n    <h4>Registration Form</h4>\r\n    <form @submit.prevent=\"registerUser\">\r\n      <div class=\"form-group mb-3\">\r\n        <input type=\"text\" class=\"form-control\" id=\"name\" v-model=\"name\" @input=\"clearErrors('name')\" placeholder=\"Enter name\" required>\r\n      </div>\r\n      <div class=\"form-group mb-3\">\r\n        <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"email\" @input=\"clearErrors('email')\" placeholder=\"Enter email\" required>\r\n        <small class=\"text-danger\" v-if=\"errors.email\">{{ errors.email[0] }}</small>\r\n      </div>\r\n      <div class=\"form-group mb-3\">\r\n        <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\" @input=\"clearErrors('password')\" placeholder=\"Password\" required>\r\n        <small class=\"text-danger\" v-if=\"errors.password\">{{ errors.password[0] }}</small>\r\n      </div>\r\n      <div class=\"form-group mb-3\">\r\n        <input type=\"password\" class=\"form-control\" id=\"confirm\" v-model=\"confirm\" placeholder=\"Confirm Password\" required>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary mt-3 w-100\">Register</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      confirm: '',\r\n      errors: {}\r\n    };\r\n  },\r\n  methods: {\r\n    async registerUser() {\r\n        try {\r\n        // Call the register API endpoint using Axios\r\n        // the /register is an API route that define in the backend using Laravel\r\n        const response = await axios.post(this.$root.$data.apiUrl + '/register', {\r\n          name: this.name,\r\n          email: this.email,\r\n          password: this.password,\r\n          password_confirmation: this.confirm\r\n        });\r\n        if (response.status === 201) {\r\n            // After successful registration, handle redirection or other actions\r\n            // Clear the form fields after successful registration\r\n            this.name = '';\r\n            this.email = '';\r\n            this.password = '';\r\n            this.confirm = '';\r\n            alert('Registration successful');\r\n            // Redirect to the login page\r\n            this.$router.push('/');\r\n        }\r\n      } catch (error) {\r\n          // Handle registration error, show error message to the user\r\n        this.errors = error.response.data.errors;\r\n      }\r\n    },\r\n    //the field param is the name of the input field that triggered the error\r\n    clearErrors(field) {\r\n      // Clear error message for the specified field\r\n      // this method is called when the user types in the input field triggering the event handler \r\n      this.errors[field] = null;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AAwBA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,CAAC;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACjB,IAAI;QACJ;QACA;QACA,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAK,GAAI,WAAW,EAAE;UACvEX,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBU,qBAAqB,EAAE,IAAI,CAACT;QAC9B,CAAC,CAAC;QACF,IAAII,QAAQ,CAACM,MAAK,KAAM,GAAG,EAAE;UACzB;UACA;UACA,IAAI,CAACb,IAAG,GAAI,EAAE;UACd,IAAI,CAACC,KAAI,GAAI,EAAE;UACf,IAAI,CAACC,QAAO,GAAI,EAAE;UAClB,IAAI,CAACC,OAAM,GAAI,EAAE;UACjBW,KAAK,CAAC,yBAAyB,CAAC;UAChC;UACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QAC1B;MACF,EAAE,OAAOC,KAAK,EAAE;QACZ;QACF,IAAI,CAACb,MAAK,GAAIa,KAAK,CAACV,QAAQ,CAACR,IAAI,CAACK,MAAM;MAC1C;IACF,CAAC;IACD;IACAc,WAAWA,CAACC,KAAK,EAAE;MACjB;MACA;MACA,IAAI,CAACf,MAAM,CAACe,KAAK,IAAI,IAAI;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
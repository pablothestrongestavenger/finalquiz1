{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      posts: [],\n      newPost: {\n        title: '',\n        body: ''\n      },\n      editPostData: {\n        id: null,\n        title: '',\n        body: ''\n      },\n      editCommentData: {\n        id: null,\n        body: ''\n      },\n      postId: 0,\n      showEditCommentModal: false,\n      newComment: '',\n      showPostForm: false,\n      showEditModal: false,\n      showCommentForm: false\n    };\n  },\n  async mounted() {\n    await this.fetchPosts();\n  },\n  methods: {\n    toggleCommentForm() {\n      this.showCommentForm = !this.showCommentForm;\n    },\n    async fetchPosts() {\n      try {\n        const response = await axios.get(`${this.$root.$data.apiUrl}/posts`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.posts = response.data;\n        for (const post of this.posts) {\n          const commentsResponse = await axios.get(`${this.$root.$data.apiUrl}/posts/${post.id}/comments`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          post.comments = commentsResponse.data;\n        }\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    },\n    async createPost() {\n      try {\n        const response = await axios.post(`${this.$root.$data.apiUrl}/posts`, this.newPost, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.posts.push(response.data);\n        this.newPost.title = '';\n        this.newPost.body = '';\n        this.showPostForm = false;\n      } catch (error) {\n        console.error(\"Error creating post:\", error);\n      }\n    },\n    openEditModal(post) {\n      this.editPostData.id = post.id;\n      this.editPostData.title = post.title;\n      this.editPostData.body = post.body;\n      this.showEditModal = true;\n    },\n    async updatePost() {\n      try {\n        const response = await axios.put(`${this.$root.$data.apiUrl}/posts/${this.editPostData.id}`, {\n          title: this.editPostData.title,\n          body: this.editPostData.body\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const updatedPost = this.posts.find(post => post.id === this.editPostData.id);\n        if (updatedPost) {\n          updatedPost.title = response.data.title;\n          updatedPost.body = response.data.body;\n        }\n        this.showEditModal = false;\n      } catch (error) {\n        console.error(\"Error updating post:\", error);\n      }\n    },\n    async deletePost(postId) {\n      try {\n        await axios.delete(`${this.$root.$data.apiUrl}/posts/${postId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.posts = this.posts.filter(post => post.id !== postId);\n      } catch (error) {\n        console.error(\"Error deleting post:\", error);\n      }\n    },\n    async createComment(postId) {\n      try {\n        const response = await axios.post(`${this.$root.$data.apiUrl}/posts/${postId}/comments`, {\n          body: this.newComment,\n          post_id: postId\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const post = this.posts.find(post => post.id === postId);\n        post.comments.push(response.data);\n        this.newComment = '';\n      } catch (error) {\n        console.error(\"Error creating comment:\", error);\n      }\n    },\n    openEditCommentModal(comment) {\n      this.editCommentData.id = comment.id;\n      this.editCommentData.body = comment.body;\n      this.showEditCommentModal = true;\n      this.postId = comment.post_id;\n    },\n    async updateComment() {\n      try {\n        const response = await axios.put(`${this.$root.$data.apiUrl}/posts/${this.postId}/comments/${this.editCommentData.id}`, {\n          body: this.editCommentData.body\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const postIndex = this.posts.findIndex(post => post.comments.some(c => c.id === this.editCommentData.id));\n        const commentIndex = this.posts[postIndex].comments.findIndex(c => c.id === this.editCommentData.id);\n        this.posts[postIndex].comments[commentIndex] = response.data;\n        this.showEditCommentModal = false;\n      } catch (error) {\n        console.error(\"Error updating comment:\", error);\n      }\n    },\n    async deleteComment(comment) {\n      try {\n        await axios.delete(`${this.$root.$data.apiUrl}/posts/${comment.post_id}/comments/${comment.id}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const post = this.posts.find(post => post.id === comment.post_id);\n        post.comments = post.comments.filter(c => c.id !== comment.id);\n        console.log(post);\n      } catch (error) {\n        console.error(\"Error deleting comment:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","posts","newPost","title","body","editPostData","id","editCommentData","postId","showEditCommentModal","newComment","showPostForm","showEditModal","showCommentForm","mounted","fetchPosts","methods","toggleCommentForm","response","get","$root","$data","apiUrl","headers","Authorization","localStorage","getItem","post","commentsResponse","comments","error","console","createPost","push","openEditModal","updatePost","put","updatedPost","find","deletePost","delete","filter","createComment","post_id","openEditCommentModal","comment","updateComment","postIndex","findIndex","some","c","commentIndex","deleteComment","log"],"sources":["C:\\clone\\finalquiz1\\sanctum-app\\src\\components\\PostPage.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar navbar-expand-lg bg-dark\">\r\n    <div class=\"container d-flex justify-content-between\">\r\n      <router-link to=\"/home\" class=\"navbar-brand text-white\">ForumApp</router-link>\r\n      <button class=\"btn btn-secondary\">\r\n        <router-link to=\"/logout\" class=\"nav-link\">Logout</router-link>\r\n      </button>\r\n    </div>\r\n  </nav>\r\n  <div class=\"container mt-5\">\r\n    <h2 class=\"text-left mb-4\">Posts</h2>\r\n    <hr>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"skeuomorphic-container mb-3\">\r\n          <form @submit.prevent=\"createPost\">\r\n            <div class=\"form-group mb-2\">\r\n              <input type=\"text\" class=\"form-control skeuomorphic-input\" v-model=\"newPost.title\" placeholder=\"Title\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <textarea class=\"form-control skeuomorphic-input\" v-model=\"newPost.body\" placeholder=\"Body\" rows=\"5\" required></textarea>\r\n            </div>\r\n            <div class=\"text-center mt-2 d-flex justify-content-end align-items-center\">\r\n              <button type=\"submit\" class=\"btn bg-secondary text-white skeuomorphic-button\">Create Post</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-6\">\r\n        <div v-for=\"post in posts\" :key=\"post.id\" class=\"card mb-4 skeuomorphic-card\">\r\n          <div class=\"card-body d-flex flex-column\">\r\n            <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n              <h5 class=\"card-title border-bottom pb-2 mb-3\">{{ post.title }}</h5>\r\n              <div>\r\n                <button class=\"btn btn-sm edit-btn skeuomorphic-btn\" @click=\"openEditModal(post)\">\r\n                  <i class=\"fa-solid fa-pen\"></i>\r\n                </button>\r\n                <button class=\"btn btn-sm delete-btn skeuomorphic-btn\" @click=\"deletePost(post.id)\">\r\n                  <i class=\"fa-solid fa-trash\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p class=\"card-text\">{{ post.body }}</p>\r\n            <hr class=\"my-4\">\r\n            <div class=\"mt-auto\">\r\n              <div class=\"d-flex justify-content-between align-items-center\">\r\n                <h6 class=\"text-left\">Comments</h6>\r\n                <button class=\"btn btn-sm text-white bg-secondary btn-comment mb-2\" @click=\"toggleCommentForm\">\r\n                  Add Comment\r\n                </button>\r\n              </div>\r\n              <form v-if=\"showCommentForm\" @submit.prevent=\"createComment(post.id)\">\r\n                <div class=\"form-group\">\r\n                  <textarea class=\"form-control skeuomorphic-input\" v-model=\"newComment\" placeholder=\"Add a comment\" rows=\"2\" required></textarea>\r\n                </div>\r\n                <div class=\"text-right d-flex justify-content-start align-items-center\">\r\n                  <button type=\"submit\" class=\"btn btn-secondary text-white btn-comment mt-3\">\r\n                    <i class=\"fa-solid fa-paper-plane\"></i>\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              <div v-for=\"comment in post.comments\" :key=\"comment.id\" class=\"card mt-2 skeuomorphic-card\">\r\n                <div class=\"card-body\">\r\n                  <p class=\"card-text\">{{ comment.body }}</p>\r\n                  <div class=\"button-container\">\r\n                    <button class=\"btn btn-sm skeuomorphic-btn\" @click=\"openEditCommentModal(comment)\">\r\n                      <i class=\"fa-solid fa-pen\"></i>\r\n                    </button>\r\n                    <button class=\"btn btn-sm skeuomorphic-btn\" @click=\"deleteComment(comment)\">\r\n                      <i class=\"fas fa-trash-alt\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Edit Post Modal -->\r\n    <div v-if=\"showEditModal\" class=\"modal fade show\" style=\"display: block;\" tabindex=\"-1\" role=\"dialog\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Edit Post</h5>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"updatePost\">\r\n              <div class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" v-model=\"editPostData.title\" placeholder=\"Title\" required>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <textarea class=\"form-control\" v-model=\"editPostData.body\" placeholder=\"Body\" required></textarea>\r\n              </div>\r\n              <div class=\"text-right\">\r\n                <button type=\"submit\" class=\"btn btn-success mr-2\">Update</button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" @click=\"showEditModal = false\">Cancel</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Edit Comment Modal -->\r\n    <div v-if=\"showEditCommentModal\" class=\"modal fade show\" style=\"display: block;\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Edit Comment</h5>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form @submit.prevent=\"updateComment\">\r\n                        <div class=\"form-group\">\r\n                            <textarea class=\"form-control\" v-model=\"editCommentData.body\" placeholder=\"Edit your comment\" rows=\"3\" required></textarea>\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button type=\"submit\" class=\"btn btn-success mr-2\">Update</button>\r\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" @click=\"showEditCommentModal = false\">Cancel</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      newPost: {\r\n        title: '',\r\n        body: ''\r\n      },\r\n      editPostData: {\r\n        id: null,\r\n        title: '',\r\n        body: ''\r\n      },\r\n      editCommentData: {\r\n          id: null,\r\n          body: ''\r\n      },\r\n      postId: 0,\r\n      showEditCommentModal: false,\r\n      newComment: '',\r\n      showPostForm: false,\r\n      showEditModal: false,\r\n      showCommentForm: false\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchPosts();\r\n  },\r\n  methods: {\r\n    toggleCommentForm() {\r\n      this.showCommentForm = !this.showCommentForm;\r\n    },\r\n    async fetchPosts() {\r\n      try {\r\n        const response = await axios.get(`${this.$root.$data.apiUrl}/posts`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.posts = response.data;\r\n        for (const post of this.posts) {\r\n          const commentsResponse = await axios.get(`${this.$root.$data.apiUrl}/posts/${post.id}/comments`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          });\r\n          post.comments = commentsResponse.data;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    },\r\n    async createPost() {\r\n      try {\r\n        const response = await axios.post(`${this.$root.$data.apiUrl}/posts`, this.newPost, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.posts.push(response.data);\r\n        this.newPost.title = '';\r\n        this.newPost.body = '';\r\n        this.showPostForm = false;\r\n      } catch (error) {\r\n        console.error(\"Error creating post:\", error);\r\n      }\r\n    },\r\n    openEditModal(post) {\r\n      this.editPostData.id = post.id;\r\n      this.editPostData.title = post.title;\r\n      this.editPostData.body = post.body;\r\n      this.showEditModal = true;\r\n    },\r\n    async updatePost() {\r\n      try {\r\n        const response = await axios.put(`${this.$root.$data.apiUrl}/posts/${this.editPostData.id}`, {\r\n          title: this.editPostData.title,\r\n          body: this.editPostData.body\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n\r\n        const updatedPost = this.posts.find(post => post.id === this.editPostData.id);\r\n        if (updatedPost) {\r\n          updatedPost.title = response.data.title;\r\n          updatedPost.body = response.data.body;\r\n        }\r\n\r\n        this.showEditModal = false;\r\n      } catch (error) {\r\n        console.error(\"Error updating post:\", error);\r\n      }\r\n    },\r\n    async deletePost(postId) {\r\n      try {\r\n        await axios.delete(`${this.$root.$data.apiUrl}/posts/${postId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.posts = this.posts.filter(post => post.id !== postId);\r\n      } catch (error) {\r\n        console.error(\"Error deleting post:\", error);\r\n      }\r\n    },\r\n    async createComment(postId) {\r\n      try {\r\n        const response = await axios.post(\r\n          `${this.$root.$data.apiUrl}/posts/${postId}/comments`,\r\n          {\r\n            body: this.newComment,\r\n            post_id: postId\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          }\r\n        );\r\n        const post = this.posts.find(post => post.id === postId);\r\n        post.comments.push(response.data);\r\n        this.newComment = '';\r\n      } catch (error) {\r\n        console.error(\"Error creating comment:\", error);\r\n      }\r\n    },\r\n    openEditCommentModal(comment) {\r\n        this.editCommentData.id = comment.id;\r\n        this.editCommentData.body = comment.body;\r\n        this.showEditCommentModal = true;\r\n        this.postId = comment.post_id;\r\n    },\r\n    async updateComment() {\r\n      try {\r\n        const response = await axios.put(\r\n          `${this.$root.$data.apiUrl}/posts/${this.postId}/comments/${this.editCommentData.id}`,\r\n          { body: this.editCommentData.body },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          }\r\n        );\r\n\r\n        const postIndex = this.posts.findIndex(post => post.comments.some(c => c.id === this.editCommentData.id));\r\n        const commentIndex = this.posts[postIndex].comments.findIndex(c => c.id === this.editCommentData.id);\r\n        this.posts[postIndex].comments[commentIndex] = response.data;\r\n\r\n        this.showEditCommentModal = false;\r\n      } catch (error) {\r\n        console.error(\"Error updating comment:\", error);\r\n      }\r\n    },\r\n    async deleteComment(comment) {\r\n      try {\r\n          await axios.delete(`${this.$root.$data.apiUrl}/posts/${comment.post_id}/comments/${comment.id}`, {\r\n              headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem('token')}`\r\n              }\r\n          });\r\n          \r\n          const post = this.posts.find(post => post.id === comment.post_id);\r\n          post.comments = post.comments.filter(c => c.id !== comment.id);\r\n          console.log(post);\r\n      } catch (error) {\r\n          console.error(\"Error deleting comment:\", error);\r\n      }\r\n  }\r\n\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  border-radius: 15px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.btn {\r\n  border-radius: 6px;\r\n  margin: 4px;\r\n}\r\n\r\n.navbar-brand {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.edit-btn, .delete-btn {\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #6c757d;\r\n}\r\n\r\n.edit-btn.i:hover, .delete-btn i:hover {\r\n  color: #dc3545;\r\n}\r\n\r\n.custom-textarea {\r\n  resize: none;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #dee2e6;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.card-body {\r\n  padding: 1.25rem;\r\n}\r\n\r\n.comment-card {\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.button-container {\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n}\r\n\r\nhr {\r\n  border: 2px solid #0C2D57;\r\n}\r\n\r\n.skeuomorphic-container {\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  background: #fafafa;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), inset 0 -4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.skeuomorphic-input .form-control {\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  background: #f2f2f2;\r\n  box-shadow: inset 2px 2px 4px rgba(0, 0, 0, 0.1), inset -2px -2px 4px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.skeuomorphic-input .form-control:focus {\r\n  outline: none;\r\n  box-shadow: inset 3px 3px 6px rgba(0, 0, 0, 0.1), inset -3px -3px 6px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.skeuomorphic-button {\r\n  border: none;\r\n  border-radius: 20px;\r\n  padding: 15px 30px;\r\n  box-shadow: 6px 6px 10px rgba(0, 0, 0, 0.1), -6px -6px 10px rgba(255, 255, 255, 0.5);\r\n  color: #333;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease-in-out;\r\n}\r\n\r\n.skeuomorphic-button:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.skeuomorphic-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n.btn-comment {\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 20px;\r\n  padding: 8px 30px;\r\n  box-shadow: 6px 6px 10px rgba(0, 0, 0, 0.1), -6px -6px 10px rgba(255, 255, 255, 0.5);\r\n  color: #333;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease-in-out;\r\n}\r\n\r\n.skeuomorphic-card {\r\n  border-radius: 15px;\r\n  background: #fafafa;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), inset 0 -4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.skeuomorphic-btn {\r\n  font-size: 10px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background: #6c757d; \r\n  padding: 10px;\r\n  color: #fff;\r\n  box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.1), -3px -3px 6px rgba(255, 255, 255, 0.5);\r\n  transition: transform 0.2s ease-in-out;\r\n}\r\n\r\n.skeuomorphic-btn:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.skeuomorphic-btn:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n.skeuomorphic-input {\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  background: #f2f2f2;\r\n  box-shadow: inset 2px 2px 4px rgba(0, 0, 0, 0.1), inset -2px -2px 4px rgba(255, 255, 255, 0.5);\r\n  transition: box-shadow 0.3s ease;\r\n}\r\n\r\n.skeuomorphic-input:focus {\r\n  outline: none;\r\n  box-shadow: inset 3px 3px 6px rgba(0, 0, 0, 0.1), inset -3px -3px 6px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5 col-3\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Enter your email and password\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"form-group mt-3\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_6 = {\n  class: \"form-group mt-3\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary mt-3 w-100\"\n}, \"Login\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"row\"\n};\nconst _hoisted_9 = {\n  class: \"col-12\"\n};\nconst _hoisted_10 = {\n  class: \"mt-3 text-left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.loginUser && $options.loginUser(...args), [\"prevent\"])),\n    class: \"col-12\"\n  }, [_createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    placeholder: \"Enter email\",\n    required: \"\",\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.clearErrors && $options.clearErrors(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.email]]), $data.errors ? (_openBlock(), _createElementBlock(\"small\", _hoisted_5, _toDisplayString($data.errors), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    placeholder: \"Password\",\n    required: \"\",\n    onInput: _cache[3] || (_cache[3] = (...args) => $options.clearErrors && $options.clearErrors(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.password]])]), _hoisted_7], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", _hoisted_10, [_createTextVNode(\"Don't have an account? \"), _createVNode(_component_router_link, {\n    to: \"/register\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Register here!\")]),\n    _: 1 /* STABLE */\n  })])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","loginUser","_hoisted_4","id","$event","$data","email","placeholder","required","onInput","clearErrors","errors","_hoisted_5","_toDisplayString","_createCommentVNode","_hoisted_6","password","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["C:\\clone\\finalquiz1\\sanctum-app\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5 col-3\">\r\n    <div class=\"row\">\r\n      <h4>Enter your email and password</h4>\r\n      <form @submit.prevent=\"loginUser\" class=\"col-12\">\r\n        <div class=\"form-group mt-3\">\r\n          <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"email\" placeholder=\"Enter email\" required @input=\"clearErrors\">\r\n          <small class=\"text-danger\" v-if=\"errors\">{{ errors }}</small>\r\n        </div>\r\n        <div class=\"form-group mt-3\">\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\" placeholder=\"Password\" required @input=\"clearErrors\">\r\n\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary mt-3 w-100\">Login</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n          <p class=\"mt-3 text-left\">Don't have an account? <router-link to=\"/register\">Register here!</router-link></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      errors: null\r\n    };\r\n  },\r\n  methods: {\r\n    async loginUser() {\r\n      try {\r\n        // Call the login API endpoint using Axios\r\n        // the /login is an API route that define in the backend using Laravel\r\n        const response = await axios.post(this.$root.$data.apiUrl + '/login', {\r\n          email: this.email,\r\n          password: this.password\r\n        });\r\n        if (response.status === 201) {\r\n          // Successful login, handle token storage and redirection\r\n          // the token will be stored in the local storage to guard the routes\r\n          // this will prevent to access the route without login\r\n          localStorage.setItem('token', response.data.token);\r\n          this.$router.push('/home');\r\n        }\r\n      } catch (error) {\r\n        // Handle login error, show error message to the user\r\n        // the errors will be displayed in the template using v-if directives\r\n        this.errors = error.response.data.message;\r\n      }\r\n    },\r\n    clearErrors() {\r\n      // Clear error message for the specified field\r\n      // this method is called when the user types in the input field triggering the event handler \r\n      this.errors = null;\r\n    }\r\n\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAK;gCACdC,mBAAA,CAAsC,YAAlC,+BAA6B;;EAE1BD,KAAK,EAAC;AAAiB;;EALpCE,GAAA;EAOiBF,KAAK,EAAC;;;EAEVA,KAAK,EAAC;AAAiB;gCAI5BC,mBAAA,CAAuE;EAA/DE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAA6B,OAAK;;EAG7DA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAgB;;;uBAjBjCI,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJJ,mBAAA,CAaM,OAbNK,UAaM,GAZJC,UAAsC,EACtCN,mBAAA,CAUO;IAVAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJnBC,cAAA,KAAAC,IAAA,KAI6BC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAEX,KAAK,EAAC;MACtCC,mBAAA,CAGM,OAHNa,UAGM,G,gBAFJb,mBAAA,CAA4H;IAArHE,IAAI,EAAC,OAAO;IAACH,KAAK,EAAC,cAAc;IAACe,EAAE,EAAC,OAAO;IAN7D,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMuEC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,WAAW,EAAC,aAAa;IAACC,QAAQ,EAAR,EAAQ;IAAEC,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAU,WAAA,IAAAV,QAAA,CAAAU,WAAA,IAAAX,IAAA,CAAW;iEAA7DM,KAAA,CAAAC,KAAK,E,GACjCD,KAAA,CAAAM,MAAM,I,cAAvCnB,mBAAA,CAA6D,SAA7DoB,UAA6D,EAAAC,gBAAA,CAAjBR,KAAA,CAAAM,MAAM,oBAP5DG,mBAAA,e,GASQzB,mBAAA,CAGM,OAHN0B,UAGM,G,gBAFJ1B,mBAAA,CAAkI;IAA3HE,IAAI,EAAC,UAAU;IAACH,KAAK,EAAC,cAAc;IAACe,EAAE,EAAC,UAAU;IAVnE,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAU6EC,KAAA,CAAAW,QAAQ,GAAAZ,MAAA;IAAEG,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;IAAEC,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAU,WAAA,IAAAV,QAAA,CAAAU,WAAA,IAAAX,IAAA,CAAW;iEAA7DM,KAAA,CAAAW,QAAQ,E,KAG7EC,UAAuE,C,8BAG3E5B,mBAAA,CAIM,OAJN6B,UAIM,GAHJ7B,mBAAA,CAEM,OAFN8B,UAEM,GADF9B,mBAAA,CAA6G,KAA7G+B,WAA6G,GAlBvHC,gBAAA,CAkBoC,yBAAuB,GAAAC,YAAA,CAAwDC,sBAAA;IAA3CC,EAAE,EAAC;EAAW;IAlBtFC,OAAA,EAAAC,QAAA,CAkBuF,MAAc,CAlBrGL,gBAAA,CAkBuF,gBAAc,E;IAlBrGM,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
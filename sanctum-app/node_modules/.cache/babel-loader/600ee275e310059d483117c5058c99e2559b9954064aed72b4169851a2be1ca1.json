{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      errors: null\n    };\n  },\n  methods: {\n    async loginUser() {\n      try {\n        // Call the login API endpoint using Axios\n        // the /login is an API route that define in the backend using Laravel\n        const response = await axios.post(this.$root.$data.apiUrl + '/login', {\n          email: this.email,\n          password: this.password\n        });\n        if (response.status === 201) {\n          // Successful login, handle token storage and redirection\n          // the token will be stored in the local storage to guard the routes\n          // this will prevent to access the route without login\n          localStorage.setItem('token', response.data.token);\n          this.$router.push('/home');\n        }\n      } catch (error) {\n        // Handle login error, show error message to the user\n        // the errors will be displayed in the template using v-if directives\n        this.errors = error.response.data.message;\n      }\n    },\n    clearErrors() {\n      // Clear error message for the specified field\n      // this method is called when the user types in the input field triggering the event handler \n      this.errors = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","errors","methods","loginUser","response","post","$root","$data","apiUrl","status","localStorage","setItem","token","$router","push","error","message","clearErrors"],"sources":["C:\\clone\\finalquiz1\\sanctum-app\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5 col-3\">\r\n    <div class=\"row\">\r\n      <h4>Enter your email and password</h4>\r\n      <form @submit.prevent=\"loginUser\" class=\"col-12\">\r\n        <div class=\"form-group mt-3\">\r\n          <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"email\" placeholder=\"Enter email\" required @input=\"clearErrors\">\r\n          <small class=\"text-danger\" v-if=\"errors\">{{ errors }}</small>\r\n        </div>\r\n        <div class=\"form-group mt-3\">\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\" placeholder=\"Password\" required @input=\"clearErrors\">\r\n\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary mt-3 w-100\">Login</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n          <p class=\"mt-3 text-left\">Don't have an account? <router-link to=\"/register\">Register here!</router-link></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      errors: null\r\n    };\r\n  },\r\n  methods: {\r\n    async loginUser() {\r\n      try {\r\n        // Call the login API endpoint using Axios\r\n        // the /login is an API route that define in the backend using Laravel\r\n        const response = await axios.post(this.$root.$data.apiUrl + '/login', {\r\n          email: this.email,\r\n          password: this.password\r\n        });\r\n        if (response.status === 201) {\r\n          // Successful login, handle token storage and redirection\r\n          // the token will be stored in the local storage to guard the routes\r\n          // this will prevent to access the route without login\r\n          localStorage.setItem('token', response.data.token);\r\n          this.$router.push('/home');\r\n        }\r\n      } catch (error) {\r\n        // Handle login error, show error message to the user\r\n        // the errors will be displayed in the template using v-if directives\r\n        this.errors = error.response.data.message;\r\n      }\r\n    },\r\n    clearErrors() {\r\n      // Clear error message for the specified field\r\n      // this method is called when the user types in the input field triggering the event handler \r\n      this.errors = null;\r\n    }\r\n\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AAwBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF;QACA;QACA,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAK,GAAI,QAAQ,EAAE;UACpET,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,IAAII,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC3B;UACA;UACA;UACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,QAAQ,CAACN,IAAI,CAACc,KAAK,CAAC;UAClD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;QAC5B;MACF,EAAE,OAAOC,KAAK,EAAE;QACd;QACA;QACA,IAAI,CAACd,MAAK,GAAIc,KAAK,CAACX,QAAQ,CAACN,IAAI,CAACkB,OAAO;MAC3C;IACF,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ;MACA;MACA,IAAI,CAAChB,MAAK,GAAI,IAAI;IACpB;EAEF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}